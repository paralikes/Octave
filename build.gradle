buildscript {
    ext {
        kotlinVersion = '1.3.72'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

archivesBaseName = 'Octave'
group 'gg.octave'
version '6.1'

mainClassName = 'gg.octave.bot.Launcher'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url 'https://dl.bintray.com/natanbc/maven' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven {
        url 'https://dl.bintray.com/sedmelluq/com.sedmelluq'
    }
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"
    // Kotlin:Eval
    implementation "org.jetbrains.kotlin:kotlin-script-runtime:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-script-util:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-scripting-jsr223-embeddable:$kotlinVersion"

    // Discord
    compile 'net.dv8tion:JDA:4.2.0_247'
    compile 'club.minnced:discord-webhooks:0.1.8'

    compile 'com.github.Devoxin:Flight:2.0.3'

    // Audio
    compile 'com.sedmelluq:lavaplayer:1.3.75'
    compile 'com.github.natanbc:lavadsp:0.7.7'
    compile 'com.sedmelluq:lavaplayer-ext-youtube-rotator:0.2.3'
    compile 'com.sedmelluq:jda-nas:1.1.0'

    // Stats
    compile 'com.datadoghq:java-dogstatsd-client:2.9.0'

    // Logging
    compile 'io.sentry:sentry:1.7.30'
    compile 'ch.qos.logback:logback-classic:1.2.3'

    // Configuration
    compile 'ninja.leaping.configurate:configurate-hocon:3.3'
    compile 'org.json:json:20170516'

    // Database
    compile 'com.rethinkdb:rethinkdb-driver:2.4.0'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.2'
    compile 'redis.clients:jedis:3.2.0'
    compile 'org.redisson:redisson:3.12.4'

    // Networking/Scraping
    compile 'com.squareup.okhttp3:okhttp:3.14.2'
    compile 'org.jsoup:jsoup:1.10.3'

    // Libraries
    compile 'org.apache.commons:commons-text:1.1'
    compile 'commons-io:commons-io:2.6'
    compile 'com.google.guava:guava:23.2-jre'
}

compileJava.options.encoding = 'UTF-8'

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    kotlinOptions {
        jvmTarget = '11'
    }
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

def getBuildVersion() {
    def gitVersion = new ByteArrayOutputStream()
    exec {
        commandLine("git", "rev-parse", "--short", "HEAD")
        standardOutput = gitVersion
    }
    return "$version\n${gitVersion.toString().trim()}"
}

task writeVersion() {
    def resourcePath = sourceSets.main.resources.srcDirs[0]
    def resources = file(resourcePath)

    if (!resources.exists()) {
        resources.mkdirs()
    }

    file("$resourcePath/version.txt").text = getBuildVersion()
}

build {
    dependsOn writeVersion
}
